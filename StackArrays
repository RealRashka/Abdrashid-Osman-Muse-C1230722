
import java.util.Arrays;
import java.util.EmptyStackException;

public class StackArrays<T> {
        private static final int DEFAULT = 2;
        private int top;
        private T[] stack;

        // Constructor with no arguments
        public StackArrays() {
            this(DEFAULT);
        }

        // Constructor with initial size
        public StackArrays(int initialSize) {
            top = 0;
            stack = (T[]) (new Object[initialSize]);
        }

        // Return size of stack
        public int size() {
            return top;
        }

        // Push method
        public void push(T element) {
            if (size() == stack.length)
                expand();
            stack[top] = element;
            top++;
        }

        // Pop method
        public T pop() {
            if (isEmpty())
                throw new EmptyStackException();

            T result = stack[--top];
            stack[top] = null;
            return result;
        }

        // Peek method
        public T peek() {
            if (isEmpty())
                throw new EmptyStackException();
            return stack[top - 1];
        }

        // Check if stack is empty
        public boolean isEmpty() {
            return top == 0;
        }

        // Expand stack size when full
        private void expand() {
            stack = Arrays.copyOf(stack, stack.length * 2);
        }

        // Display all elements
        public void display() {
            if (isEmpty())
                throw new EmptyStackException();

            System.out.println("Elements in the stack:");
            for (int i = 0; i < top; i++) {
                System.out.println(stack[i]);
            }
            System.out.println();
        }

    public static void main(String[] args) {
        StackArrays<String> names = new StackArrays<>();
        names.push("axmed");
        names.push("mohamed");
        names.push("jaamac");

        names.display();

        System.out.println("Top element: " + names.peek());
        System.out.println("Removed element: " + names.pop());

        names.display();
    }
    }
