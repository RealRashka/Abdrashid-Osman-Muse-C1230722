import java.util.Arrays;
import java.util.EmptyStackException;

public class MyStack<T> {
    private static final int INITIAL_SIZE = 2;
    private int index;
    private T[] data;

    // Default constructor
    public MyStack() {
        this(INITIAL_SIZE);
    }

    // Constructor with custom size
    public MyStack(int size) {
        index = 0;
        data = (T[]) new Object[size];
    }

    // Add element to stack
    public void push(T value) {
        if (index == data.length)
            grow();
        data[index++] = value;
    }

    // Remove element from top
    public T pop() {
        if (isEmpty())
            throw new EmptyStackException();

        T removed = data[--index];
        data[index] = null;
        return removed;
    }

    // Show top element
    public T top() {
        if (isEmpty())
            throw new EmptyStackException();
        return data[index - 1];
    }

    // Check if stack is empty
    public boolean isEmpty() {
        return index == 0;
    }

    // Increase array size
    private void grow() {
        data = Arrays.copyOf(data, data.length * 2);
    }

    // Show all elements
    public void printStack() {
        if (isEmpty())
            throw new EmptyStackException();

        System.out.println("Stack contents:");
        for (int i = 0; i < index; i++) {
            System.out.println(data[i]);
        }
        System.out.println();
    }

    public static void main(String[] args) {
        MyStack<String> books = new MyStack<>();
        books.push("Java");
        books.push("Python");
        books.push("C++");

        books.printStack();

        System.out.println("Top item: " + books.top());
        System.out.println("Removed: " + books.pop());

        books.printStack();
    }
}
